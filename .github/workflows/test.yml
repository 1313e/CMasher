# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Test

on: [push, pull_request]

jobs:
  build:
    name: ${{ matrix.os }}, Python ${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
        - ubuntu-latest
        - macos-latest
        - windows-latest
        python-version:
        - '3.9'
        - '3.10'
        - '3.11'
        - '3.12'
        include:
        - os: ubuntu-20.04
          python-version: '3.9'
      fail-fast: false

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    - if: ${{ matrix.os == 'ubuntu-20.04' }}
      name: Install minimal env
      run: |
        python -m pip install --upgrade pip
        python -m pip install tomli tomli_w
        python scripts/pin_requirements.py
        python -m pip uninstall --yes tomli tomli_w
        python -m pip install -e . --only-binary ':all:'
        python -m pip install pytest pytest-mpl pytest-cov
    - if: ${{ matrix.os != 'ubuntu-20.04' }}
      name: Install full test env
      run: |
        python -m pip install --upgrade pip setuptools wheel
        pip install -r requirements_dev.txt
    - name: Test deployment
      run: |
        pipx run check-manifest
        pipx run build --sdist
        pipx run twine check dist/*
    - run: python -m pip freeze
    - name: Test package
      run: |
        pytest --color=yes
    - name: Upload coverage
      run: |
        curl -s https://codecov.io/bash | bash
    - name: Deploy package
      if: ${{ success() && matrix.os == 'ubuntu-latest' && github.event_name == 'push' && github.ref == 'refs/heads/master' }}
      env:
        TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
        TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
      run: |
        twine upload --skip-existing dist/*
